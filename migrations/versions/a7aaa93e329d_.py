"""empty message

Revision ID: a7aaa93e329d
Revises: 
Create Date: 2024-03-08 16:42:14.077729

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a7aaa93e329d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('category', sa.Enum('CAKE', 'CUPCAKE', 'PIE', 'COOKIE', 'DONUT', 'PASTRY', name='category'), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.Column('price', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.CheckConstraint("image ~* '^https?://.*\\.(png|jpg|jpeg|gif)$'", name='valid_image_url'),
    sa.CheckConstraint('price >= 0', name='non_negative_price'),
    sa.CheckConstraint('stock >= 0', name='non_negative_stock'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('firebase_uid', sa.String(length=128), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('CLIENT', 'ADMIN', name='role'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('zip', sa.String(length=5), nullable=False),
    sa.Column('default', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint("LENGTH(zip) = 5 AND zip ~ '^[0-9]{5}$'", name='zip_format_constraint'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('date', sa.TIMESTAMP(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'DELIVERED', 'CANCELLED', name='order_status'), nullable=False),
    sa.Column('stripe_payment_id', sa.String(), nullable=True),
    sa.Column('delivery_method', sa.Enum('STANDARD', 'EXPRESS', 'NEXT_DAY', 'PICK_UP', name='deliver_method'), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='pay_status'), nullable=False),
    sa.Column('shipping_address_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['shipping_address_id'], ['addresses.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cart_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('portion', sa.Enum('SLICE', 'WHOLE', 'MINI', name='portion'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('ordered', sa.Boolean(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('ordered = true AND order_id IS NOT NULL OR ordered = false AND order_id IS NULL', name='cart_item_order_association_check'),
    sa.CheckConstraint('quantity >= 1', name='non_negative_quantity'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cart_items')
    op.drop_table('orders')
    op.drop_table('addresses')
    op.drop_table('users')
    op.drop_table('products')
    # ### end Alembic commands ###
